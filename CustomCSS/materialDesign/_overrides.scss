
.radio-control,
.control {
  position: relative;
  margin-top: $mf-gap * 1.5;
  margin-bottom: $mf-gap * 1.5;
}

.form-inline {
  > .control,
  > .btn {
    display: inline-block;
    margin-bottom: 0;
  }
}

.form-help {
  margin-top: $mf-spacer;
  margin-left: $mf-spacer;
  color: $mf-label-color;
  font-size: $mf-active-font-size;

  .checkbox-control &,
  .radio-control &,
  .control & {
    position: absolute;
    width: 100%;
  }

  .checkbox-control & {
    position: relative;
    margin-bottom: $mf-font-size;
  }

  .radio-control & {
    padding-top: $mf-spacer * 2;
    margin-top: -$mf-font-size;
  }
}

.control {
  // scss-lint:disable QualifyingElement, NestingDepth
  input {
    height: $mf-font-size * 1.9;
  }

  textarea {
    resize: none;
  }

  select {
    width: 100%;
    font-size: $mf-font-size;
    height: $mf-font-size * 1.6;
    padding: $mf-spacer $mf-spacer ($mf-spacer / 2);
    background: none;
    border: none;
    line-height: 1.6;
    box-shadow: none;
  }

  .label {
    position: absolute;
    top: $mf-font-size / 4;
    pointer-events: none;
    padding-left: $mf-spacer;
    z-index: 1;
    color: $mf-label-color;
    font-size: $mf-font-size;
    font-weight: normal;
    transition: all $mf-transition-speed ease;
  }

  .bar {
    position: relative;
    border-bottom: ($mf-font-size / 16) solid $mf-border-color;
    display: block;

    &::before {
      content: "";
      height: $mf-font-size / 8;
      width: 0;
      left: 50%;
      bottom: $mf-font-size / -16;
      position: absolute;
      background: $mf-focus-color;
      transition: left $mf-transition-speed ease, width $mf-transition-speed ease;
      z-index: 2;
    }
  }

  input,
  textarea {
    display: block;
    background: none;
    padding: $mf-spacer $mf-spacer ($mf-spacer / 2);
    font-size: $mf-font-size;
    border-width: 0;
    border-color: transparent;
    line-height: 1.9;
    width: 100%;
    color: transparent;
    transition: all $mf-transition-speed ease;
    box-shadow: none;
  }

  input[type="file"] {
    line-height: 1;

    ~ .bar {
      display: none;
    }
  }

  select,
  input:focus,
  input:valid,
  input.form-file,
  input.has-value,
  textarea:focus,
  textarea:valid,
  textarea.form-file,
  textarea.has-value {
    color: $mf-input-color;

    ~ .label {
      font-size: $mf-active-font-size;
      color: $mf-active-color;
      top: $mf-active-top;
      left: 0;
    }
  }

  select,
  input,
  textarea {
    &:focus {
      outline: none;

      ~ .label {
        color: $mf-focus-color;
      }

      ~ .bar {
        &::before {
          width: 100%;
          left: 0;
        }
      }
    }
  }
}

// Radio & Checkbox
.checkbox-control,
.radio-control {
  label {
    position: relative;
    cursor: pointer;
    padding-left: $mf-checkbox-gap;
    text-align: left;
    color: $mf-input-color;
    display: block;
  }

  input {
    width: auto;
    opacity: 0;
    position: absolute;
    left: 0;
  }
}

.radio-control {
  margin-bottom: $mf-font-size;

  .helper {
    position: absolute;
    top: $mf-radio-margin;
    left: $mf-radio-margin;
    cursor: pointer;
    display: block;
    font-size: $mf-font-size;
    user-select: none;
    color: $mf-border-color;

    &::before,
    &::after {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      margin: $mf-spacer * 2;
      width: $mf-font-size;
      height: $mf-font-size;
      transition: transform $mf-transition-speed ease;
      border-radius: 50%;
      border: ($mf-font-size / 8) solid currentColor;
    }

    &::after {
      transform: scale(0);
      background-color: $mf-focus-color;
      border-color: $mf-focus-color;
    }
  }

  label:hover .helper {
    color: $mf-focus-color;
  }

  // scss-lint:disable QualifyingElement, NestingDepth
  input:checked {
    ~ .helper {
      &::after {
        transform: scale(0.5);
      }

      &::before {
        color: $mf-focus-color;
      }
    }
  }
}

.checkbox-control {
  // scss-lint:disable QualifyingElement

  margin-top: $mf-gap * 2;
  margin-bottom: $mf-font-size;

  .helper {
    color: $mf-border-color;
    position: absolute;
    top: $mf-checkbox-top;
    left: 0;
    width: $mf-font-size;
    height: $mf-font-size;
    z-index: 0;
    border: ($mf-font-size / 8) solid currentColor;
    border-radius: $mf-font-size / 16;
    transition: border-color $mf-transition-speed ease;

    &::before,
    &::after {
      position: absolute;
      height: 0;
      width: $mf-font-size * 0.2;
      background-color: $mf-focus-color;
      display: block;
      transform-origin: left top;
      border-radius: $mf-font-size / 4;
      content: "";
      transition: opacity $mf-transition-speed ease, height 0s linear $mf-transition-speed;
      opacity: 0;
    }

    &::before {
      top: $mf-font-size * 0.65;
      left: $mf-font-size * 0.38;
      transform: rotate(-135deg);
    }

    &::after {
      top: $mf-font-size * 0.3;
      left: 0;
      transform: rotate(-45deg);
    }
  }

  label:hover .helper {
    color: $mf-focus-color;
  }

  input:checked {
    ~ .helper {
      color: $mf-focus-color;

      &::after,
      &::before {
        opacity: 1;
        transition: height $mf-transition-speed ease;
      }

      &::after {
        height: $mf-font-size / 2;
      }

      &::before {
        height: $mf-font-size * 1.2;
        transition-delay: $mf-transition-speed;
      }
    }
  }
}

.radio-control + .radio-control,
.checkbox-control + .checkbox-control {
  margin-top: $mf-font-size;
}

.has-error {
  .legend.legend,
  &.control .label.label {
    // Prevent !importantRule
    color: $mf-error-color;
  }

  &.control,
  &.checkbox-control,
  &.radio-control,
  &.radio-control {
    .form-help,
    .helper {
      color: $mf-error-color;
    }
  }

  .bar {
    &::before {
      background: $mf-error-color;
      left: 0;
      width: 100%;
    }
  }
}
